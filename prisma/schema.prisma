generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  fullname        String
  username        String
  email           String     @unique
  password        String
  profileImage    String?
  otp             String     @default("0")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  pollId          Poll       @relation("bookMark", fields: [bookmarkedPolls], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bookmarkedPolls String[]   @default([]) @db.ObjectId
  createBy        Poll[]     @relation("UserPolls")
  voteBy          Poll[]     @relation("votedBy")
  responses       Response[]
}

model Poll {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  question   String
  type       String
  options    Options[]
  responses  Response[]
  closed     Boolean    @default(false)
  creator    User       @relation("UserPolls", fields: [createById], references: [id])
  createById String     @db.ObjectId
  voters     User?      @relation("votedBy", fields: [votersId], references: [id])
  votersId   String[]   @db.ObjectId
  User       User[]     @relation("bookMark")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

type Options {
  optionText String?
  votes      Int?    @default(0)
}

model Response {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  poll         Poll     @relation(fields: [pollId], references: [id])
  pollId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
  responseText String   @default("")
  createdAt    DateTime @default(now())
}
